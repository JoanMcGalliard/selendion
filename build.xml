<project name="selendion" default="build" basedir=".">
    <property name="dir.support-lib" value="${basedir}/support-lib"/>

    <taskdef classname="net.bluecow.googlecode.ant.GoogleCodeUploadTask"
             classpath="${dir.support-lib}/ant-googlecode-0.0.1.jar" name="gcupload"/>
    <path id="svnant.classpath">
        <fileset dir="${dir.support-lib}">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    <typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.classpath"/>

    <target name="svn.version">
        <sequential>
            <svn username="${googleUser}"
                 password="${googlePassword}">
                <info target="${basedir}"/>
            </svn>
            <property name="version" value="0.5.${svn.info.rev}"/>
        </sequential>
    </target>
    <target name="svn.commit">
        <svn username="${googleUser}"
             password="${googlePassword}">
            <commit dir="${basedir}"
                    message="Committing latest build before release"
                    recurse="true"/>
        </svn>
    </target>
    <target name="svn.htmlMimeTypes">
        <svn username="${googleUser}"
             password="${googlePassword}">
            <propset name="svn:mime-type" path="${basedir}/spec" value="text/html"
                     recurse="true"/>
        </svn>
    </target>


    <property name="productName" value="selendion"/>
    <property name="ProductName" value="Selendion"/>

    <property name="dir.build" value="${basedir}/build"/>
    <property name="dir.classes" value="${dir.build}/classes"/>
    <property name="dir.test.output" value="${dir.build}/test-output"/>
    <property name="dir.selendion.output" value="${dir.test.output}/selendion"/>
    <property name="dir.dist" value="${basedir}/dist"/>
    <property name="selendion.browser" value="*firefox"/>
    <property name="selendion.selenium.server.port" value="5555"/>
    <property file="${basedir}/local.properties"/>


    <property name="dir.example" value="${basedir}/selendion-example"/>

    <path id="compile.classpath">
        <fileset dir="lib" includes="*.jar" excludes="*-src.jar"/>
    </path>

    <target name="build"
            description="Builds everything from scratch"
            depends="clean,compile,run.tests,build.jar,build.srczip,build.dependencies.jar"
            />

    <target name="start.selenium"
            depends="stop.selenium">
        <java classname="org.openqa.selenium.server.SeleniumServer" fork="true" spawn="true">
            <arg value="-port"/>
            <arg value="${selendion.selenium.server.port}"/>
            <classpath>
                <pathelement location="lib/selenium-server.jar"/>
                <pathelement location="lib/junit-4.5.jar"/>
            </classpath>
        </java>
    </target>
    <target name="stop.selenium">
        <waitfor maxwait="3" maxwaitunit="second">
            <not>
                <http url="http://localhost:${selendion.selenium.server.port}/selenium-server/driver/?cmd=shutDown"/>
            </not>
        </waitfor>
    </target>
    <target name="start.webserver"
            depends="stop.webserver">
        <java classname="testSupport.Fizmez.FizmezWebServer" fork="true" spawn="true">
            <classpath>
                <pathelement path="${dir.classes}"/>
            </classpath>
        </java>
    </target>
    <target name="stop.webserver">
        <waitfor maxwait="3" maxwaitunit="second">
            <not>
                <http url="http://localhost:55555?cmd=shutDown"/>
            </not>
        </waitfor>
    </target>

    <target name="clean" depends="stop.selenium, stop.webserver">
        <sequential>
            <delete dir="${dir.build}"/>
            <delete dir="${dir.test.output}"/>
            <delete dir="${dir.selendion.output}"/>
            <delete dir="${dir.classes}"/>
            <delete dir="${dir.dist}"/>
            <delete>
                <fileset dir="${dir.example}/lib" includes="**/*.jar"/>
            </delete>
        </sequential>
    </target>
    <target name="build.example.zip"
            depends="svn.version,build.dependencies.jar">
        <copy todir="${dir.example}/lib">
            <fileset file="${dir.dist}/${productName}-${version}-with-dependencies.jar"/>
        </copy>

        <ant inheritall="false" antfile="build.xml" dir="${dir.example}" target="build"/>
        <ant inheritall="false" antfile="build.xml" dir="${dir.example}" target="clean"/>
        <zip basedir="${dir.example}"
             excludes=".svn"
             destfile="${dir.dist}/${productName}-${version}-example.zip"/>
    </target>

    <target name="compile">
        <mkdir dir="${dir.classes}"/>

        <javac classpathref="compile.classpath"
               destdir="${dir.classes}"
               srcdir="src/main/java:src/test:spec"
               debug="yes"
               failonerror="yes"
               source="1.5"
               target="1.5"
                />

        <copy todir="${dir.classes}">
            <fileset dir="src/main/java" excludes="**/*.java"/>
            <fileset dir="src/test" excludes="**/*.java"/>
            <fileset dir="spec" excludes="**/*.java"/>
        </copy>
    </target>

    <target name="run.tests" depends="start.webserver, start.selenium">
        <mkdir dir="${dir.test.output}"/>
        <mkdir dir="${dir.selendion.output}"/>

        <junit fork="yes" forkmode="once" printsummary="yes" haltonfailure="yes" showoutput="yes">
            <jvmarg value="-Dselendion.output.dir=${dir.selendion.output}"/>
            <jvmarg value="-Dconcordion.output.dir=${dir.selendion.output}"/>
            <jvmarg value="-Dselendion.browser=${selendion.browser}"/>

            <classpath>
                <path refid="compile.classpath"/>
                <pathelement location="${dir.classes}"/>
            </classpath>

            <formatter type="plain"/>

            <batchtest todir="${dir.test.output}">
                <fileset dir="src/test">
                    <include name="**/*Test.java"/>
                    <exclude name="**/Abstract*"/>
                </fileset>
                <fileset dir="spec">
                    <include name="**/*Test.java"/>
                    <exclude name="**/Abstract*"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="build.jar" depends="svn.version,compile,run.tests">
        <mkdir dir="${dir.dist}"/>

        <jar destfile="${dir.dist}/${productName}-${version}.jar"
             basedir="${dir.classes}"
             compress="false"
             filesetmanifest="skip"
             manifest="src/main/java/MANIFEST.MF">
            <exclude name="examples/**"/>
            <exclude name="support/**"/>
            <exclude name="spec/**"/>
            <zipfileset src="lib/concordion-1.3.1-patched.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/selenium-java-client-driver.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/selenium-server.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <indexjars/>
        </jar>
    </target>
    <target name="build.dependencies.jar" depends="build.jar">

        <mkdir dir="${dir.dist}"/>

        <jar destfile="${dir.dist}/${productName}-${version}-with-dependencies.jar"
             basedir="${dir.classes}"
             compress="false"
             filesetmanifest="skip"
             manifest="src/main/java/MANIFEST.MF">
            <exclude name="examples/**"/>
            <exclude name="spec/**"/>
            <zipfileset src="lib/concordion-1.3.1-patched.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/selenium-java-client-driver.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/selenium-server.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/javassist_3.9.0.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/junit-4.5.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/ognl-2.6.9.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/tagsoup-1.2.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/xom-1.1.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/htmlunit-2.4.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/htmlunit-core-js-2.4.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/commons-httpclient-3.1.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/cssparser-0.9.5.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/sac-1.3.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/commons-io-1.4.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/commons-collections-3.2.1.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/commons-lang-2.4.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/nekohtml-1.9.9.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/xalan-2.7.0.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <zipfileset src="lib/xercesImpl-2.8.1.jar">
                <exclude name="META-INF/"/>
            </zipfileset>
            <indexjars/>
        </jar>
    </target>

    <target name="build.srczip" depends="svn.version">
        <sequential>
            <mkdir dir="${dir.dist}"/>

            <zip destfile="${dir.dist}/${productName}-${version}-src.zip"
                 basedir="src/main/java"
                 compress="false">
            </zip>
        </sequential>
    </target>

    <target name="release" depends="clean,compile,run.tests,svn.commit,svn.version,build,build.example.zip">
        <gcupload
                username="${googleUser}"
                password="${googlePassword}"
                projectname="${productName}"
                filename="${dir.dist}/${productName}-${version}.jar"
                targetfilename="${productName}-${version}.jar"
                summary="Version ${version} of ${productName}"
                labels="Featured, Type-Package, OpSys-All"/>
        <gcupload
                username="${googleUser}"
                password="${googlePassword}"
                projectname="${productName}"
                filename="${dir.dist}/${productName}-${version}-with-dependencies.jar"
                targetfilename="${productName}-${version}-with-dependencies.jar"
                summary="Version ${version} of ${productName} with full dependencies"
                labels="Type-Package, OpSys-All"/>
        <gcupload
                username="${googleUser}"
                password="${googlePassword}"
                projectname="${productName}"
                filename="${dir.dist}/${productName}-${version}-src.zip"
                targetfilename="${productName}-${version}-src.zip"
                summary="Source for Version ${version} of ${productName}"
                labels="Type-Source, OpSys-All"/>
        <gcupload
                username="${googleUser}"
                password="${googlePassword}"
                projectname="${productName}"
                filename="${dir.dist}/${productName}-${version}-example.zip"
                targetfilename="${productName}-${version}-example.zip"
                summary="Example Selendion ant project to help you get started"
                labels="Type-Archive, OpSys-All"/>

    </target>
</project>
