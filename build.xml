<project name="selendion" default="build" basedir=".">

    <property name="version" value="0.1"/>
    <property name="productName" value="selendion"/>
    <property name="ProductName" value="Selendion"/>

    <property name="dir.build" value="${basedir}/build"/>
    <property name="dir.classes" value="${dir.build}/classes"/>
    <property name="dir.test.output" value="${dir.build}/test-output"/>
    <property name="dir.selendion.output" value="${dir.test.output}/selendion"/>
    <property name="dir.dist" value="${basedir}/dist"/>

    <path id="compile.classpath">
        <fileset dir="lib" includes="*.jar" excludes="*-src.jar"/>
    </path>

    <target name="build"
            description="Builds everything from scratch"
            depends="compile, run.tests, build.jar, build.srczip"
            />

    <target name="start.selenium">
        <java classname="org.openqa.selenium.server.SeleniumServer"
              failonerror="true">
            <arg value="-port"/>
            <arg value="5555"/>
            <arg value="-singleWindow"/>
            <classpath>
                <pathelement location="lib/selenium-server.jar"/>
            </classpath>
        </java>
    </target>
    <target name="start.webserver">
        <java classname="testSupport.Fizmez.FizmezWebServer"
              failonerror="true">
            <classpath>
                <pathelement path="${dir.classes}" /> 
            </classpath>
              </java>
    </target>

    <target name="clean">
        <delete dir="${dir.build}"/>
        <delete dir="${dir.test.output}"/>
        <delete dir="${dir.selendion.output}"/>
        <delete dir="${dir.classes}"/>
        <delete dir="${dir.dist}"/>
    </target>

    <target name="compile">
        <mkdir dir="${dir.classes}"/>

        <javac classpathref="compile.classpath"
               destdir="${dir.classes}"
               srcdir="src/main/java:src/test:spec"
               debug="yes"
               failonerror="yes"
               source="1.5"
               target="1.5"
                />

        <copy todir="${dir.classes}">
            <fileset dir="src/main/java" excludes="**/*.java"/>
            <fileset dir="src/test" excludes="**/*.java"/>
            <fileset dir="spec" excludes="**/*.java"/>
        </copy>
    </target>

    <target name="run.tests" depends="compile, start.webserver, start.selenium">
        <mkdir dir="${dir.test.output}"/>
        <mkdir dir="${dir.selendion.output}"/>

        <junit fork="yes" forkmode="once" printsummary="yes" haltonfailure="yes" showoutput="yes">
            <jvmarg value="-Dselendion.output.dir=${dir.selendion.output}"/>

            <classpath>
                <path refid="compile.classpath"/>
                <pathelement location="${dir.classes}"/>
            </classpath>

            <formatter type="plain"/>

            <batchtest todir="${dir.test.output}">
                <fileset dir="src/test">
                    <include name="**/*Test.java"/>
                    <exclude name="**/Abstract*"/>
                </fileset>
                <fileset dir="spec">
                    <include name="**/*Test.java"/>
                    <exclude name="**/Abstract*"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="build.jar" depends="compile">
        <mkdir dir="${dir.dist}"/>

        <jar destfile="${dir.dist}/${productName}-${version}.jar"
             basedir="${dir.classes}"
             compress="false">
            <exclude name="examples/**"/>
            <exclude name="support/**"/>
            <zipfileset src="lib/concordion-r42-patched.jar"/>
            <zipfileset src="lib/selenium-java-client-driver.jar"/>
            <zipfileset src="lib/selenium-server.jar"/>
            <indexjars/>
        </jar>
    </target>

    <target name="build.srczip">
        <mkdir dir="${dir.dist}"/>

        <zip destfile="${dir.dist}/${productName}-${version}-src.zip"
             basedir="src/main/java"
             compress="false">
        </zip>
    </target>

    <target name="dist" depends="clean,build">
        <zip destfile="${dir.dist}/${productName}-${version}.zip" compress="true">
            <zipfileset prefix="${productName}-${version}" dir=".">
                <exclude name="dist/*-src.zip"/>
                <exclude name="build/**"/>
                <exclude name="bin/**"/>
            </zipfileset>
        </zip>
    </target>

</project>
